{"version":3,"sources":["components/PhoneBock.module.css","components/Form.js","components/ContactList.js","components/SearchContact.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","InputValues","e","currentTarget","value","setState","addContact","lengthInputNemeChech","length","lengthInputNumberChech","preventDefault","alert","props","contactList","onSubmit","id","shortid","generate","resetInputValues","idName","idNumber","className","s","form","this","htmlFor","labelName","type","onChange","autoComplete","labelNumber","placeholder","pattern","btnForm","Component","СontactList","onDeleted","map","href","btnList","onClick","SearchContact","velue","containerSearch","labelSearch","inputSearch","Mobile","contacts","filter","contact","veluesFilter","getFilter","filterValues","toLowerCase","includes","onCheckName","newName","numbers","some","Object","values","join","deletedContact","contactId","prevState","prevProps","console","log","localStorage","setItem","JSON","stringify","getStorageContacts","getItem","parsStorageContacts","parse","filterContact","container","headingForm","React","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a7ff9e5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBock_container__1aUbr\",\"headingForm\":\"PhoneBock_headingForm__3Fhby\",\"contactList\":\"PhoneBock_contactList__2I4bt\",\"form\":\"PhoneBock_form__2uxiK\",\"labelName\":\"PhoneBock_labelName__14J2L\",\"labelNumber\":\"PhoneBock_labelNumber__1ZtLE\",\"btnForm\":\"PhoneBock_btnForm__1Pqa4\",\"containerSearch\":\"PhoneBock_containerSearch__1zoEw\",\"btnList\":\"PhoneBock_btnList__2J-hK\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './PhoneBock.module.css';\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  InputValues = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = e => {\n    const lengthInputNemeChech = this.state.name.length;\n    const lengthInputNumberChech = this.state.number.length;\n    e.preventDefault();\n    if (lengthInputNemeChech < 2 || lengthInputNemeChech > 10) {\n      alert('Введіть ім\"я більше 1-го символа і не більше 10');\n      return;\n    }\n    if (lengthInputNumberChech < 7 || lengthInputNumberChech > 10) {\n      alert('Введіть номер більше 7-ми цифр і не більше 10');\n      return;\n    }\n    // if (this.checkValue())\n\n    const checkName = this.props.contactList({ name: this.state.name });\n    if (checkName) {\n      alert('Це ім\"я вже існує');\n\n      return;\n    }\n\n    this.props.onSubmit({\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    });\n    this.resetInputValues();\n  };\n\n  // checkValue = () => {\n\n  // };\n\n  resetInputValues = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const idName = shortid.generate();\n    const idNumber = shortid.generate();\n    //   const  = onAlert;\n    return (\n      <form className={s.form} onSubmit={this.addContact}>\n        <label htmlFor={idName} className={s.labelName}>\n          Им'я\n        </label>\n        <input\n          id={idName}\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          onChange={this.InputValues}\n          autoComplete=\"off\"\n        ></input>\n        <label htmlFor={idNumber} className={s.labelNumber}>\n          Номер\n        </label>\n        <input\n          id={idNumber}\n          placeholder=\"(0xx) xxx-xx-xx\"\n          type=\"tel\"\n          pattern=\"^[ 0-9]+$\"\n          name=\"number\"\n          value={this.state.number}\n          onChange={this.InputValues}\n          autoComplete=\"off\"\n        ></input>\n        <button className={s.btnForm} type=\"submite\">\n          Додати контакт\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './PhoneBock.module.css';\n\nexport default function СontactList({ contactList, onDeleted }) {\n  return (\n    <ul className={'js-list'}>\n      {contactList.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <span>{name}: </span>\n            <span>\n              +38 <a href={`tel: ${number}`}>{number}</a>\n            </span>\n            <button\n              className={s.btnList}\n              type=\"button\"\n              onClick={() => onDeleted(id)}\n            >\n              Видалити\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nСontactList.propTypes = {\n  contactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport s from './PhoneBock.module.css';\n\nexport default function SearchContact({ velue, SearchContact }) {\n  const id = shortid.generate();\n  return (\n    <div className={s.containerSearch}>\n      <label className={s.labelSearch} htmlFor={id}>\n        Поиск контакта по имени\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={velue}\n        onChange={SearchContact}\n        id={id}\n        className={s.inputSearch}\n      ></input>\n    </div>\n  );\n}\nSearchContact.propTypes = {\n  velue: PropTypes.string.isRequired,\n  SearchContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\n// import shortid from 'shortid';\nimport s from './components/PhoneBock.module.css';\n\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport SearchContact from './components/SearchContact';\n\nexport default class Mobile extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обнова');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  componentDidMount() {\n    const getStorageContacts = localStorage.getItem('contacts');\n    const parsStorageContacts = JSON.parse(getStorageContacts);\n    if (getStorageContacts) {\n      this.setState({ contacts: parsStorageContacts });\n    }\n\n    // console.log(loc)\n  }\n\n  addContact = contact => {\n    this.setState({\n      contacts: [contact, ...this.state.contacts],\n    });\n  };\n\n  veluesFilter = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  getFilter = () => {\n    const { filter, contacts } = this.state;\n    const filterValues = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValues),\n    );\n  };\n\n  onCheckName = (newName, numbers) => {\n    return this.state.contacts.some(\n      ({ name }) => name === Object.values(newName).join(''),\n    );\n  };\n\n  deletedContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const filterContact = this.getFilter();\n    // const alert = this.onAlert;\n    return (\n      <div className={s.container}>\n        <h1 className={s.headingForm}>Телефонна книга</h1>\n        <Form onSubmit={this.addContact} contactList={this.onCheckName} />\n        <h2 className={s.contactList}>Контакти</h2>\n        <SearchContact\n          velue={this.state.filter}\n          SearchContact={this.veluesFilter}\n        />\n        <ContactList\n          contactList={filterContact}\n          onDeleted={this.deletedContact}\n        />\n      </div>\n    );\n  }\n}\n// а з аргумента name, приходить те що я вводжу в інпут name...\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}